A loop is a block of code that runs over and over again until a certain
condition is met.
An infinite loop is a loop that never stops, as it’s impossible to meet the
condition for breaking out of the loop.
A while loop will continue to run as long as a particular condition is true.
A do–while loop will also run while a condition is true, but the condition
comes at the end, rather than the beginning of the loop.
A for loop sets the initial value, a condition for stopping, and increment at
the start, and then runs a block of code until the condition is met. After
every loop, the increment instruction is carried out.
Nested loops can be formed by running a loop within another loop. The
inner loop runs all the way through for every pass of the outer loop.

  Functions can be defined using the function declaration, or by creating a
function expression by assigning an anonymous function to a variable.
Arrow functions are a shorthand notation that can used for writing short,
one-line, anonymous functions.
All functions return a value. If this isn’t explicitly stated, the function will
return undefined .
A parameter is a value that’s written in the parentheses of a function
declaration and can be used like a variable inside the function’s body.
An argument is a value that’s provided to a function when it’s called.
The return value of a function can be assigned to a variable.
A callback is a function that’s provided as an argument to a

Objects have properties that contain information about the object, and
methods that are actions the object can perform.
Object literals in JavaScript are a collection of key–value pairs placed inside
curly braces ( {} ) and separated by commas.
Properties can be strings, numbers, Booleans or arrays.
Methods are stored as functions.
An object’s properties and methods can be accessed using either dot
notation or square bracket notation.
Objects are mutable, which means that their properties and methods can
be changed or removed (even if they’re created using const ).
Nested objects can be created by placing objects inside objects.
The keyword this can be used in properties and methods to refer to the
object itself.

The Document Object Model is a way of representing a page of HTML as a
tree of nodes.
The DOM has a number of methods that can be used to access elements
on a page.
The DOM provides a number of methods that can be used to navigate
around the DOM tree.
An element’s attributes can be accessed using the getAttribute()
method and updated using the setAttribute() method.
The innerHTML property can be used to quickly insert raw HTML into an
element.
The createElement() and createTextNode() methods can be used to
create dynamic markup.
Markup can be added to the page using the appendChild() and
insertBefore() methods.
Elements can be replaced using the replaceChild() method and removed
using the remove() method.
The CSS properties of an element can be changed by updating the style
property
